@using AS_Store_GL.Models
@model AS_Store_GL.Models.PageModel

@{
    ViewBag.Title = "ClosingStock_withValue";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }


    Store_GL_DbContext db = new Store_GL_DbContext();
    Int64 companyID = Convert.ToInt64(HttpContext.Current.Session["loggedCompID"].ToString());
    Int64 loggedUserID = Convert.ToInt64(HttpContext.Current.Session["loggedUserID"].ToString());


    var permission_Check = from m in db.AslRoleDbSet
                           where m.COMPID == companyID && m.USERID == loggedUserID
                               && m.CONTROLLERNAME == "Report" && m.ACTIONNAME == "ClosingStock_withValue"
                           select m;
    var Status = "";
    foreach (var check in permission_Check)
    {
        Status = check.STATUS;
    }

    if (Status == "A")
    {
    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    
    
    
    
    
    

    List<SelectListItem> StoreName_List = new List<SelectListItem>();
    var store_List = (from n in db.StkStoreDbSet where n.COMPID == companyID select n).ToList();
    foreach (var n in store_List)
    {
        StoreName_List.Add(new SelectListItem { Text = n.STORENM, Value = n.STOREID.ToString() });
    }

    
    
    
    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);
}



<link href="~/Content/bootstrap%20datepicker%20css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap%20datepicker%20css/datepicker3.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.js"></script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.StkTrans.COMPID, new { @Value = companyID })

    <div id="contentHeaderBox">
        <h1 style="padding-left: 16px;">Closing Stock with Value</h1>
    </div>
    <br />

    <div class="col-md-12">
        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Store Name:    ")
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.STOREID, StoreName_List, "Select Store Name", htmlAttributes: new { @class = "form-control", autofocus = true })
                    @Html.ValidationMessageFor(model => model.STOREID, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Date:    ")
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Report_FromDate, htmlAttributes: new { id = "fromDate", @class = "form-control", @Value = currentDateTime.ToString("dd-MMM-yyyy") })
                    @Html.ValidationMessageFor(model => model.Report_FromDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-2"></div>
                <div class="col-md-8">
                    <input type="submit" class="btn btn-success" value="Print" formtarget="_blank" />
                </div>
            </div>


        </div>
    </div>



    <script type="text/javascript">
        $(document).ready(function () {
            $('#fromDate').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                }
                else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function (e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("submitID").focus();
            });


        });


    </script>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



